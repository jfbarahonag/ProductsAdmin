@using BlazorApp.Services
@using BlazorApp.Models

@page "/add-product"
@inject IProductService productService;
@inject ICategoryService categoryService;
@inject NavigationManager navigationManager;
@inject ILogger<AddProduct> logger;

<PageTitle>Add new product</PageTitle>
<ModuleTitle Title="Add Title" />

<button
  class="btn btn-dark" 
  @onclick="@(() => navigationManager.NavigateTo("/products"))">
  Go to products
</button>
<EditForm Model="@product" OnSubmit="@Save">
  <div class="row">
    <div class="col form-group">
      <label for="title" class="col-form-label">Title</label>
      <InputText id="title" @bind-Value="product.Title" required class="form-control" />
    </div>
  </div>
  <div class="row">
    <div class="col form-group">
      <label for="category" class="col-form-label">Category</label>
      <InputSelect id="category" @bind-Value="product.CategoryId" class="form-control">
        <option value="0">Select category</option>
        @foreach(var c in categries)
        {
          <option value="@c.Id">@c.Name</option>
        }
      </InputSelect>
    </div>
  </div>
  <div class="row">
    <div class="col form-group">
      <label for="price" class="col-form-label">Price</label>
      <InputNumber min="1" id="price" @bind-Value="product.Price" required class="form-control" />
    </div>
  </div>
  <div class="row">
    <div class="col form-group">
      <label for="image" class="col-form-label">Image (URL)</label>
      <InputText id="image" @bind-Value="product.Image" required class="form-control" />
    </div>
  </div>
  <div class="row">
    <div class="col form-group">
      <label for="description" class="col-form-label">Description</label>
      <InputTextArea id="description" @bind-Value="product.Description" required class="form-control" />
    </div>
  </div>
  <hr />
  <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code
{
  private Product product = new();
  private List<Category> categries = [];

  protected override async Task OnInitializedAsync()
  {
    categries = await categoryService.Get();
  }

  private async Task Save()
  {
    product.Images = [product.Image];
    logger.LogInformation(product.ToString());
    
    if(product.CategoryId <= 0) return;
    
    await productService.Add(product);
    navigationManager.NavigateTo("/products");
  }
}